### For development purposes only ###
version: "3.6"
services:
  database:
    image: fabrictestbed/postgres:12.3
    container_name: credmgr-db
    networks:
      - frontend
      - backend
    restart: always
    volumes:
      - ./pg_data/data:${PGDATA:-/var/lib/postgresql/data}
      - ./pg_data/logs:${POSTGRES_INITDB_WALDIR:-/var/log/postgresql}
    environment:
       - POSTGRES_HOST=${POSTGRES_HOST:-database}
       - POSTGRES_PORT=5432
       - POSTGRES_MULTIPLE_DATABASES=${POSTGRES_DB:-credmgr}
       - POSTGRES_USER=${POSTGRES_USER:-fabric}
       - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-fabric}
       - PGDATA=${PGDATA:-/var/lib/postgresql/data}

  nginx:
    image: library/nginx:1
    container_name: cm-nginx
    networks:
      - frontend
      - backend
    ports:
      - 8443:443
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./ssl/fullchain.pem:/etc/ssl/public.pem
      - ./ssl/privkey.pem:/etc/ssl/private.pem
    restart: always

  credmgr:
    build:
      context: ./
      dockerfile: Dockerfile
    image: fabrictestbed/credmgr:latest
    container_name: credmgr
    networks:
      - frontend
      - backend
    depends_on:
      - nginx
      - database
    volumes:
      - ./log/credmgr:/var/log/credmgr
      - ./config:/etc/credmgr/config
      - ./ssl/pubkey.pem:/etc/credmgr/public.pem
      - ./ssl/pubkey.pem:/etc/credmgr/cert.pem
      - ./ssl/privkey.pem:/etc/credmgr/private.pem
    #ports:
    #  - 7000:7000
    #  - 8100:8100
    restart: always

  cm-app:
    build:
      context: ./cm-app
      dockerfile: Dockerfile
    image: fabrictestbed/cm-app:latest
    container_name: cm-app
    networks:
      - frontend
      - backend
    #ports:
    #  - 9000:3000
    # volume mount docker based files so that they don't rebuild on each deployment
    volumes:
      - ./docker_node_modules:/code/node_modules
      - ./docker_build:/code/build
    stdin_open: true
    restart: always

  vouch-proxy:
    container_name: cm-vouch-proxy
    networks:
      - frontend
      - backend
    image: fabrictestbed/vouch-proxy:0.27.1
    #ports:
    #  - 9090:9090
    volumes:
      - ./vouch:/config
      - ./data:/data
    restart: always

networks:
  frontend:
  backend:
    internal: true
